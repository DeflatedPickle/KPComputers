(define x 1)
(define y 1)
(define w (term:getWidth))
(define h (term:getHeight))
(define scrollX 0)
(define scrollY 0)
(define lines (java.util.LinkedList))
(define filePath (args 0))
(define menu #f)
(define menuItem 0)
(define status "Press Ctrl for menu")
(define running #t)

(define consume (lambda (file)
                    (define line (file:readLine))
                    (cond ((= -1 line) '())
                          (else
                              (lines:add line)
                              (consume file)))))

(define load (lambda (path)
                 (lines:clear)
                 (cond ((fs:exists path)
                        (define file (fs:read path))
                        (consume file))
                       (else '()))))

(define produce (lambda (file index)
                    (cond ((not (= index (- (lines:size) 1)))
                           (define line (lines:get index))
                           (file:write (string-append line "\n"))
                           (produce file (+ index 1))))))

(define save (lambda (path)
                 (define file (fs:open path))
                 (produce file 0)
                 (set! menu #f)))

(define writeLines (lambda (index)
                       (cond ((or (= index (- h 2)) (= index (- (lines:size) 1))) '())
                             (else
                                 (term:setCursorPos 1 (+ y 1))
                                 (term:clearLine)
                                 (define sLine (lines:get (+ y scrollY)))
                                 (term:write sLine)
                                 (set! y (+ y 1))
                                 (writeLines y)))))

(define redrawText (lambda ()
                       (define oldY y)
                       (set! y 0)
                       (writeLines y)
                       (term:setCursorPos (- x scrollX) (- y scrollY))
                       (set! y oldY)))

(define redrawMenu (lambda ()
                       (term:setCursorPos 1 (- h 1))
                       (term:clearLine)
                       (define lnStr (string-append "Ln " (java.lang.String:valueOf y)))
                       (term:setCursorPos (- w (string-length lnStr)) (- h 1))
                       (term:write lnStr)
                       (term:setCursorPos 1 (- h 1))
                       (cond (menu
                                 (cond ((= menuItem 0)
                                        (term:write "[Save]")
                                        (term:setCursorPos (+ (term:getCursorX) 6) (term:getCursorY)))
                                       (else
                                           (term:write "Save")
                                           (term:setCursorPos (+ (term:getCursorX) 4) (term:getCursorY))))

                                 (cond ((= menuItem 1)
                                        (term:write "[Exit]")
                                        (term:setCursorPos (+ (term:getCursorX) 6) (term:getCursorY)))
                                       (else
                                           (term:write "Exit")
                                           (term:setCursorPos (+ (term:getCursorX) 4) (term:getCursorY)))))
                             (else
                                 (term:write status)))
                       (term:setCursorPos (- x scrollX) (- y scrollY))))

(define doMenuFunc (lambda (func)
                       (cond ((= func 0)
                              (save filePath))
                             ((= func 1)
                              (set! running #f)))))

(define redrawLine (lambda (line)
                       (define l (lines:get line))
                       (term:setCursorPos (- 1 scrollX) (- (+ line 1) scrollY))
                       (term:clearLine)
                       (term:write l)
                       (term:setCursorPos (- x scrollX) (- (+ line 1) scrollY))))

(define setCursorPos (lambda (sx sy)
                         (define screenX (- sx scrollX))
                         (define screenY (- sy scrollY))
                         (define redraw #f)
                         (cond ((< screenX 1)
                                (set! scrollX (- sx 1))
                                (set! screenX 1)
                                (set! redraw #t))
                               ((> screenX w)
                                (set! scrollX (- sx w))
                                (set! screenX w)
                                (set! redraw #t)))
                         (cond ((< screenY 1)
                                (set! scrollY (- sy 1))
                                (set! screenY 1)
                                (set! redraw #t))
                               ((> screenY (- h 1))
                                (set! scrollY (- sy (- h 1)))
                                (set! screenY (- h 1))
                                (set! redraw #t)))
                         (cond (redraw
                                (redrawText)))
                         (term:setCursorPos screenX screenY)
                         (redrawMenu)))

(define run (lambda ()
                (cond (running
                          (define e (os:pull))
                          (cond ((string=? (e:name) "char")
                                 (cond ((string=? ((e:args) 0) "__enter__")
                                        (cond ((not menu)
                                               (define line (lines:get (- y 1)))
                                               (lines:set (- y 1) (str:sstring line 0 (- x 1)))
                                               (redrawText)
                                               (set! x 1)
                                               (set! y (+ y 1))
                                               (setCursorPos x y))
                                              (else
                                                  (doMenuFunc menuItem)))
                                        (redrawMenu)
                                        (run))
                                       ((string=? ((e:args) 0) "__back__")
                                        (cond ((> x 1)
                                               (define line (lines:get (- y 1)))
                                               (define newLine (str:combine (str:sstring line 0 (- x 2)) (str:sstring line x)))
                                               (lines:set (- y 1) newLine)
                                               (redrawLine (- y 1))
                                               (set! x (- x 1))
                                               (setCursorPos x y))
                                              ((> y 1)
                                               (define prevLine (string-length (lines:get (- y 2))))
                                               (define newLine (str:combine (lines:get (- y 2)) (lines:get (- y 1))))
                                               (lines:set (- y 1) newLine)
                                               (lines:remove (- y 1))
                                               (redrawText)
                                               (set! x (+ prevLine 1))
                                               (set! y (- y 1))
                                               (setCursorPos x y)))
                                        (run))
                                       ((string=? ((e:args) 0) "__up__")
                                        (cond ((> y 1)
                                               (set! y (- y 1))
                                               (setCursorPos x y)))
                                        (run))
                                       ((string=? ((e:args) 0) "__down__")
                                        (cond ((< y (- (lines:size) 1))
                                               (set! y (+ y 1))
                                               (setCursorPos x y)))
                                        (run))
                                       ((string=? ((e:args) 0) "__left__")
                                        (cond ((not menu)
                                               (cond ((> x 1)
                                                      (set! x (- x 1)))
                                                     ((and (= x 1) (> y 1))
                                                      (set! x (string-length (lines:get (- y 1))))
                                                      (set! y (- y 1)))))
                                              (else
                                                  (set! menuItem (- menuItem 1))
                                                  (cond ((< menuItem 0)
                                                         (set! menuItem 1)))
                                                  (redrawMenu)))
                                        (setCursorPos x y)
                                        (run))
                                       ((string=? ((e:args) 0) "__right__")
                                        (cond ((not menu)
                                               (cond ((< x (+ (string-length (lines:get y)) 1))
                                                      (set! x (+ x 1)))
                                                     ((and (= x (+ (string-length (lines:get y)) 1)) (< y (lines:size)))
                                                      (set! x 1)
                                                      (set! y (+ y 1)))))
                                              (else
                                                  (set! menuItem (+ menuItem 1))
                                                  (cond ((> menuItem 1)
                                                         (set! menuItem 1)))
                                                  (redrawMenu)))
                                        (setCursorPos x y)
                                        (run))
                                       ((string=? ((e:args) 0) "__tab__")
                                        (define s (lines:get (- y 1)))
                                        (lines:set (- y 1) (str:combine "  " s))
                                        (set! x (+ x 2))
                                        (setCursorPos x y)
                                        (redrawLine (- y 1))
                                        (run))
                                       ((string=? ((e:args) 0) "__ctrl__")
                                        (set! menu (not menu))
                                        (redrawMenu)
                                        (run))
                                       (else
                                           (define s (lines:get (- y 1)))
                                           (define newLine (str:combine (str:sstring s 0 (- x 1)) ((e:args) 0) (str:sstring s x)))
                                           (lines:set (- y 1) newLine)
                                           (redrawLine (- y 1))
                                           (set! x (+ x 1))
                                           (setCursorPos x y)
                                           (run)))))))))

(define fill (lambda (index stop)
                 (cond ((not (= index stop))
                        (lines:add "")
                        (fill (+ index 1) stop)))))

(load filePath)

(cond ((= (lines:size) 0)
       (fill 0 h)))

(term:clear)
(term:setCursorPos x y)
(redrawText)
(redrawMenu)
(redrawText)
(term:setCursorPos x y)
(run)
(term:clear)
(term:setCursorPos 1 1)